"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[555],{84151:(e,t,i)=>{i.d(t,{Z:()=>b});var n=i(67294),o=i(86010),c=i(39960),r=i(53438),a=i(13919),s=i(95999);const l={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F",docCardIcon:"docCardIcon_elTJ"};var d=i(99603),p=i(21702);function u(e){let{href:t,children:i}=e;return n.createElement(c.default,{href:t,className:(0,o.default)("card padding--lg",l.cardContainer)},i)}function m(e){let{href:t,icon:i,title:c,description:r}=e;return n.createElement(u,{href:t},n.createElement("h2",{className:(0,o.default)("text--truncate",l.cardTitle),title:c},i,c),r&&n.createElement("p",{className:l.cardDescription,title:r},r))}function f(e){let{item:t}=e;const i=(0,r.Wl)(t);return i?n.createElement(m,{href:i,icon:n.createElement(d.G,{icon:p.cC_,className:l.docCardIcon}),title:t.label,description:t.customProps?.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const i=(0,a.Z)(t.href)?n.createElement(d.G,{icon:p.FL8,className:l.docCardIcon}):n.createElement(d.G,{icon:p.wlW,className:l.docCardIcon}),o=(0,r.xz)(t.docId??void 0);return n.createElement(m,{href:t.href,icon:i,title:t.label,description:t.description??o?.description})}function b(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(h,{item:t});case"category":return n.createElement(f,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}},45425:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=i(87462),o=(i(67294),i(3905)),c=i(8065),r=i(53438);const a={id:"icons",title:"Icons",description:"Icons",custom_edit_url:null},s=void 0,l={unversionedId:"api/beta/icons",id:"api/beta/icons",title:"Icons",description:"Icons",source:"@site/docs/api/beta/icons.tag.mdx",sourceDirName:"api/beta",slug:"/api/beta/icons",permalink:"/docs/api/beta/icons",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"icons",title:"Icons",description:"Icons",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Test Workflow via External Trigger",permalink:"/docs/api/beta/test-external-execute-workflow"},next:{title:"Update an icon",permalink:"/docs/api/beta/set-icon"}},d={},p=[],u={toc:p},m="wrapper";function f(e){let{components:t,...i}=e;return(0,o.kt)(m,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Use this API to implement functionality related to object icons (application icons for example).\nWith this functionality in place, administrators can set or remove an icon for specific object type for use throughout IdentityNow."),(0,o.kt)(c.Z,{items:(0,r.jA)().items,mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);