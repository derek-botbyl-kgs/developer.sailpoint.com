"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[1331],{84151:(e,i,t)=>{t.d(i,{Z:()=>g});var r=t(67294),c=t(86010),o=t(39960),n=t(53438),a=t(13919),d=t(95999);const s={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F",docCardIcon:"docCardIcon_elTJ"};var l=t(99603),p=t(21702);function u(e){let{href:i,children:t}=e;return r.createElement(o.default,{href:i,className:(0,c.default)("card padding--lg",s.cardContainer)},t)}function m(e){let{href:i,icon:t,title:o,description:n}=e;return r.createElement(u,{href:i},r.createElement("h2",{className:(0,c.default)("text--truncate",s.cardTitle),title:o},t,o),n&&r.createElement("p",{className:s.cardDescription,title:n},n))}function f(e){let{item:i}=e;const t=(0,n.Wl)(i);return t?r.createElement(m,{href:t,icon:r.createElement(l.G,{icon:p.cC_,className:s.docCardIcon}),title:i.label,description:i.customProps?.description??(0,d.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:i.items.length})}):null}function v(e){let{item:i}=e;const t=(0,a.Z)(i.href)?r.createElement(l.G,{icon:p.FL8,className:s.docCardIcon}):r.createElement(l.G,{icon:p.wlW,className:s.docCardIcon}),c=(0,n.xz)(i.docId??void 0);return r.createElement(m,{href:i.href,icon:t,title:i.label,description:i.description??c?.description})}function g(e){let{item:i}=e;switch(i.type){case"link":return r.createElement(v,{item:i});case"category":return r.createElement(f,{item:i});default:throw new Error(`unknown item type ${JSON.stringify(i)}`)}}},25391:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(87462),c=(t(67294),t(3905)),o=t(8065),n=t(53438);const a={id:"service-provider-config",title:"ServiceProviderConfig",description:"ServiceProviderConfig",custom_edit_url:null},d=void 0,s={unversionedId:"api/iiq/service-provider-config",id:"api/iiq/service-provider-config",title:"ServiceProviderConfig",description:"ServiceProviderConfig",source:"@site/docs/api/iiq/service-provider-config.tag.mdx",sourceDirName:"api/iiq",slug:"/api/iiq/service-provider-config",permalink:"/docs/api/iiq/service-provider-config",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"service-provider-config",title:"ServiceProviderConfig",description:"ServiceProviderConfig",custom_edit_url:null},sidebar:"iiqSideBar",previous:{title:"Returns a Schema based on id.",permalink:"/docs/api/iiq/get-schema-by-id"},next:{title:"Returns all ServiceProviderConfig resources.",permalink:"/docs/api/iiq/service-provider-config-get"}},l={},p=[],u={toc:p},m="wrapper";function f(e){let{components:i,...t}=e;return(0,c.kt)(m,(0,r.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,c.kt)(o.Z,{items:(0,n.jA)().items,mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);